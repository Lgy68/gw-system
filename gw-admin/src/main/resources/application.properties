server.port=8081

##com.mysql.cj.jdbc.Driver
##   sql版本5.0以上加上cj,以下的不加上cj
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ry-vue?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.db-type=com.alibaba.druid.pool.DruidDataSource
#
## sqlite库
##spring.datasource.sqlite.jdbc-url=jdbc:sqlite://D:/warehouse/Develop/webRadinfoQueueCall
##spring.datasource.sqlite.username=
##spring.datasource.sqlite.password=
##spring.datasource.sqlite.driver-class-name=org.sqlite.JDBC
#
## diuid链接池配置文件
##  spring.datasource.druid.initial-size                           : 初始化时建立物理连接的个数.初始化发生在显示调用init方法,或者第一次getConnection时
##  spring.datasource.druid.min-idle                              : 最小连接池数量
##  spring.datasource.druid.max-active                            : 最大连接池数量
##  spring.datasource.druid.max-wait                              : 获取连接时最大等待时间,单位毫秒.配置了maxWait之后,缺省启用公平锁,并发效率会有所下降,如果需要可以通过配置useUnfairLock属性为true使用非公平锁
##  spring.datasource.druid.time-between-eviction-runs-millis           : 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
##  spring.datasource.druid.min-evictable-idle-time-millis             : 配置一个连接在池中最小生存的时间,单位是毫秒
##  spring.datasource.druid.validation-query                        : 用来检测连接是否有效的sql,要求是一个查询语句,常用select 'x'.如果validationQuery为null,testOnBorrow,testOnReturn,testWhileIdle都不会起作用
##  spring.datasource.druid.test-on-borrow                         : 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
##  spring.datasource.druid.test-on-return                         : 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
##  spring.datasource.druid.test-while-idle                            : 建议配置为true,不影响性能,并且保证安全性.申请连接的时候检测,如果空闲时间大于timeBetweenEvictionRunsMillis,执行validationQuery检测连接是否有效
##  spring.datasource.druid.pool-prepared-statements                  : 是否缓存preparedStatement,也就是PSCache.PSCache对支持游标的数据库性能提升巨大,比如说oracle.在mysql下建议关闭
##  spring.datasource.druid.max-pool-prepared-statement-per-connection-size    : 要启用PSCache,必须配置大于0,当大于0时,poolPreparedStatements自动触发修改为true.在Druid中,不会存在Oracle下PSCache占用内存过多的问题,可以把这个数值配置大一些,比如说100
spring.datasource.druid.initial-size=2
spring.datasource.druid.min-idle=2
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

#**Druid监控**

# Druid监控过滤器配置
#  spring.datasource.druid.filters       : 使用的过滤器类型(stat是统计，wall是SQL防火墙，防SQL注入的)
spring.datasource.druid.filters=stat,wall

# WebStatFilter配置（web监控）
#  spring.datasource.druid.web-stat-filter.enabled       : 是否启用WebStatFilter
#  spring.datasource.druid.web-stat-filter.url-pattern    : 过滤地址
#  spring.datasource.druid.web-stat-filter.exclusions : 过滤地址排除
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js, *.gif, *.jpg, *.png, *.css, *.ico, /druid/*

# StatViewServlet配置（数据库监控）
#  spring.datasource.druid.stat-view-servlet.enabled        : 是否启用StatViewServlet
#  spring.datasource.druid.stat-view-servlet.url-pattern     : 监控地址前缀
#  spring.datasource.druid.stat-view-servlet.reset-enable    : 能否重置数据
#  spring.datasource.druid.stat-view-servlet.login-username   : 登录用户名
#  spring.datasource.druid.stat-view-servlet.login-password   : 登录密码
#  spring.datasource.druid.stat-view-servlet.allow             : IP白名单
#  spring.datasource.druid.stat-view-servlet.deny          : IP黑名单(黑名单优先级高于白名单)
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=yuan
spring.datasource.druid.stat-view-servlet.login-password=123456
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=

spring.redis.database=5
## Redis服务器地址39.170.92.199
spring.redis.host=172.16.200.138
## Redis服务器连接端口  #6379
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=root
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=10000
#开启了redis连接池的两个配置参数testWhileIdle、testOnBorrow为True，分别表示 在空闲时检查有效性、在获取连接的时候检查有效性 检查到无效连接时，会清理掉无效的连接，并重新获取新的连接。
spring.redis.pool.test-on-borrow=true
spring.redis.pool.test-while-idle=true 

# token配置
# 令牌自定义标识
token.header: Authorization
# 令牌密钥
token.secret: abcdefghijklmnopqrstuvwxyz
# 令牌有效期（默认30分钟）
token.expireTime: 30

#国际化资源文件路径
spring.messages.basename=i18n/messages_zh_CN
#oauth.exclude.path=/user,/demo/**,/list

